#!/bin/sh
################################################################################
# Script to generate 退费上报文件
# author: fanghm@asiainfo.com
# 2006/9/11
#			
# NOTE: DB_CONNECT_STRING用于设置数据库连接串
# 9/13/2006 按照《退费上报文件格式及检错标准V1.0》创建
################################################################################
# set -x
# set 200607	# for debug
DB_CONNECT_STRING="aijs/aijs@zmjs" #testjs

if [ $# -lt 1 ]; then
	print "Bad parameters!"
    print "Usage:"
    print "\t bfee_rpt.sh <bal_month> [file_seq]"
    print "\t bal_month - Format: 'YYYYMM', say '200602'"
    print "\t file_seq  - Range : 0-99(0-Normal other-ReSend)"
	
	exit -1;
fi

bal_month=$1
seq="$2"
if [ "$seq" = "" ]; then
	seq="0"
fi
file_seq=`printf %03s $seq`	

logpath=`echo $SYS_LOG_PATH`
now=`date +%Y%m%d%H%M%S`

logfile=$logpath/spdz/bfee_${now}.log

# 退费上报文件
bfee_file=$logpath/spdz/BFEE${bal_month}${file_seq}.571	# BFEEYYYYMMNNN.ZZZ

# clear
echo - This will take a few minutes, pls wait ...

#logfile=/data1/home/jsusr1/center/log/spdz/bfee_20060913171524.log
if true; then
################################################################################
sqlplus $DB_CONNECT_STRING > /dev/null 2>&1 << SQLEOF
set line 250;
set pagesize 5000; 

spool $logfile;
SELECT 
'20', 
decode(b.sp_type, 3, '01', 5, '02', 7, '03', 2, '04', 6, '05', '00') biz_type, 
a.sp_code, 
'0' biz_code,	--a.operator_code, 
'$bal_month',
--unit: li->fen, settle_ratio: FLH-0.65 other-0.85
sum(a.fee_refund) / 10 * DECODE(b.sp_type, 7, 0.65, 0.85) refund 
FROM STAT_USER_ACC_BILL a, ismg_sp_info@snzjcb1 b
WHERE a.bill_month='$bal_month' AND a.sp_code=b.sp_id 
AND b.prov_code<>'571' AND b.sp_type IN (2,3,5,6,7) --wap/pda/flh/mms/kjava
--AND sysdate b.valid_date AND b.expire_date -- 用当前时间检查SP代码是否生效
GROUP by a.sp_code,b.sp_type;

spool off;
exit
SQLEOF
################################################################################
fi

#cat $logfile

if [ -f "$bfee_file" ]; then
	echo "- Same file existed, add file seq and re-try."
	mv -f $bfee_file $bfee_file.bak.$now
	#exit -1
fi

# bfee_file head
blanks=`printf "%33s" " "`
head="1046000571  46000000  ${file_seq}${now}01$blanks\r\n"
echo "$head\c" > $bfee_file

# bfee_file body
awk ' /^20/ { printf("%2s%2s%-10s%20s%-8s%012.f%20s\r\n", $1,$2,$3," ",$5,$6," ") }' $logfile >> $bfee_file

cat $logfile | awk '/^20/ {print}' | awk '{ n+=1; s+= $6 } END { printf("lines:%d sum: %f \r\n", n, s) }'
lines=`awk ' /^20/ { print $1 }' $logfile | wc -l`
fee=`cat $logfile | awk '/^20/ {print}' | awk '{ s+=$6} END { printf("%f", s) }'`

# bfee_file tail
# lines=cat $logfile | awk '/^20/ {print}' |  cut -d 6 | awk '{ s+= $1 } END { print "sum is ", s }'
linefmt=`printf "%09d%012.f%28s" $lines $fee " "`
tail="9046000571  46000000  ${file_seq}$linefmt"
echo "$tail\r\n" >> $bfee_file


echo - Temp files:
echo "\t$logfile"

echo - Result files:
echo "\t$bfee_file"

echo "A-OK!"

exit 0

